@namespace TextWorldBlazor.Components

<div>
    &gt;<input type="text"
           class="command-input"
           spellcheck="false"
           autofocus
           @bind=@command
           @onkeyup=@(eventArgs => OnKeyPress(eventArgs.Key)) />
</div>

@code {
    private string command { get; set; }
    private LinkedList<string> commandHistory { get; set; } = new LinkedList<string>();
    private bool reversed { get; set; } = false;

    [Parameter]
    public EventCallback<string> OnEnter { get; set; }

    private async void OnKeyPress(string key)
    {
        if (key == "ArrowUp" && commandHistory.Count > 0)
        {
            if (command == commandHistory.Last.Value)
            {
                commandHistory.AddFirst(commandHistory.Last.Value);
                commandHistory.RemoveLast();
            }

            var _command = commandHistory.Last.Value;
            command = _command;
            commandHistory.RemoveLast();
            commandHistory.AddFirst(_command);
        }
        else if (key == "ArrowDown" && commandHistory.Count > 0)
        {
            if (command == commandHistory.First.Value)
            {
                commandHistory.AddLast(commandHistory.First.Value);
                commandHistory.RemoveFirst();
            }

            var _command = commandHistory.First.Value;
            command = _command;
            commandHistory.RemoveFirst();
            commandHistory.AddLast(_command);
        }
        else if (key == "Enter" && !String.IsNullOrEmpty(command))
        {
            var _command = command;
            command = string.Empty;

            if (commandHistory.Count > 25)
            {
                commandHistory.RemoveLast();
            }

            commandHistory.AddLast(_command);

            await OnEnter.InvokeAsync(_command);
        }
    }
}